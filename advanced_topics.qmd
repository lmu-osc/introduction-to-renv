---
title: "Advanced Topics"
---

Optional: discuss any advanced topics?

# Caching

-   explain concept; downloaded packages are in a shared pool that can be used across different projects. different projects using the same versions of a package can access the same file/folder for the package rather than needing to make copies for each different project.
-   show that `paths$cache()` will return the path to the cache being used by your project
-   show that some packages will have multiple stored versions in the cache which makes sense because different projects will have different

``` r
renv::paths$cache()
#> [1] "/Users/<user_here>/Library/Caches/org.R-project.R/R/renv/cache/v5/macos/R-4.4/aarch64-apple-darwin20"
list.files("/Users/<user_here>/Library/Caches/org.R-project.R/R/renv/cache/v5/R-4.3/aarch64-apple-darwin20/ggplot2")
#> [1] "3.4.3" "3.4.4" "3.5.0"
```

# "Settings" and "Config"

https://rstudio.github.io/renv/reference/settings.html

https://rstudio.github.io/renv/reference/config.html


# Library Management

https://rstudio.github.io/renv/reference/index.html#library-management

Emphasis on `record()`, and `history()`/`revert()`. Also talk about the `lockfile_*()` functions as useful documentation for understanding the contents of the lockfile and what everything means.

Possible discuss `checkout()`?

# Docker and {renv}

(mention existence, and link out to Binder which can create [most of] the Docker file from a renv lockfile)

https://rstudio.github.io/renv/articles/docker.html

## Binder

(link to the tutorial if we create one. otherwise, just link to Binder page on renv)

# Python Integration

(only mention existence, and link to)

https://rstudio.github.io/renv/articles/python.html

